// <auto-generated />
using System;
using CadastrodeAtms.DbConn;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CadastrodeAtms.Migrations
{
    [DbContext(typeof(Conexao))]
    partial class ConexaoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("CadastrodeAtms.Models.AtmModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("atmID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AtmBairro")
                        .HasColumnName("atmBAIRRO")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("AtmCep")
                        .HasColumnName("atmCEP")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<int>("AtmCidade")
                        .HasColumnName("atmCIDADE")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AtmComplemento")
                        .HasColumnName("atmCOMPLEMENTO")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("AtmEndereco")
                        .HasColumnName("atmENDERECO")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("AtmLatitude")
                        .HasColumnName("atmLATITUDE")
                        .HasColumnType("TEXT");

                    b.Property<string>("AtmLongitude")
                        .HasColumnName("atmLONGITUDE")
                        .HasColumnType("TEXT");

                    b.Property<string>("AtmNome")
                        .HasColumnName("atmNOME")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int?>("AtmPa")
                        .HasColumnName("atmPA")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AtmPc")
                        .IsRequired()
                        .HasColumnName("atmPC")
                        .HasColumnType("TEXT")
                        .HasMaxLength(5);

                    b.Property<string>("AtmPontoRef")
                        .HasColumnName("atmPONTOREF")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("AtmUf")
                        .HasColumnName("atmUF")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnName("atmDTCADASTRO")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Ufid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("AtmCidade");

                    b.HasIndex("Ufid");

                    b.ToTable("ATMs");
                });

            modelBuilder.Entity("CadastrodeAtms.Models.MunicipioModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MunID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<float?>("MunIcms")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MunICMS")
                        .HasColumnType("REAL");

                    b.Property<float?>("MunIcmsInterno")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MunICMSInterno")
                        .HasColumnType("REAL");

                    b.Property<float?>("MunIss")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MunISS")
                        .HasColumnType("REAL");

                    b.Property<string>("MunNome")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MunNOME")
                        .HasColumnType("TEXT");

                    b.Property<int>("MunUf")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MunUF")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("MunUf");

                    b.ToTable("Municipios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            MunNome = "São Paulo",
                            MunUf = 19
                        },
                        new
                        {
                            id = 2,
                            MunNome = "Guarulhos",
                            MunUf = 19
                        });
                });

            modelBuilder.Entity("CadastrodeAtms.Models.UfModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("date('now')");

                    b.Property<string>("UfNome")
                        .HasColumnType("TEXT");

                    b.Property<string>("UfSigla")
                        .HasColumnType("TEXT")
                        .HasMaxLength(2);

                    b.HasKey("id");

                    b.ToTable("UFS");

                    b.HasData(
                        new
                        {
                            id = 1,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(8711),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 566, DateTimeKind.Local).AddTicks(5888),
                            UfNome = "Acre",
                            UfSigla = "AC"
                        },
                        new
                        {
                            id = 2,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9729),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9715),
                            UfNome = "Amazonas",
                            UfSigla = "AM"
                        },
                        new
                        {
                            id = 3,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9740),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9739),
                            UfNome = "Roraima",
                            UfSigla = "RR"
                        },
                        new
                        {
                            id = 4,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9743),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9742),
                            UfNome = "Pará",
                            UfSigla = "PA"
                        },
                        new
                        {
                            id = 5,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9746),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9744),
                            UfNome = "Amapá",
                            UfSigla = "AP"
                        },
                        new
                        {
                            id = 6,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9748),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9747),
                            UfNome = "Tocantins",
                            UfSigla = "TO"
                        },
                        new
                        {
                            id = 7,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9750),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9749),
                            UfNome = "Maranhão",
                            UfSigla = "MA"
                        },
                        new
                        {
                            id = 8,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9753),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9752),
                            UfNome = "Piauí",
                            UfSigla = "PI"
                        },
                        new
                        {
                            id = 9,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9755),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9754),
                            UfNome = "Ceará",
                            UfSigla = "CE"
                        },
                        new
                        {
                            id = 10,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9758),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9757),
                            UfNome = "Rio Grande do Norte",
                            UfSigla = "RN"
                        },
                        new
                        {
                            id = 11,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9760),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9759),
                            UfNome = "Paraíba",
                            UfSigla = "PB"
                        },
                        new
                        {
                            id = 12,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9762),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9761),
                            UfNome = "Pernambuco",
                            UfSigla = "PE"
                        },
                        new
                        {
                            id = 13,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9765),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9764),
                            UfNome = "Alagoas",
                            UfSigla = "AL"
                        },
                        new
                        {
                            id = 14,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9767),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9766),
                            UfNome = "Sergipe",
                            UfSigla = "SE"
                        },
                        new
                        {
                            id = 15,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9769),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9768),
                            UfNome = "Bahia",
                            UfSigla = "BA"
                        },
                        new
                        {
                            id = 16,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9772),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9771),
                            UfNome = "Minas Gerais",
                            UfSigla = "MG"
                        },
                        new
                        {
                            id = 17,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9774),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9773),
                            UfNome = "Espírito Santo",
                            UfSigla = "ES"
                        },
                        new
                        {
                            id = 18,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9777),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9775),
                            UfNome = "Rio de Janeiro",
                            UfSigla = "RJ"
                        },
                        new
                        {
                            id = 19,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9779),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9778),
                            UfNome = "São Paulo",
                            UfSigla = "SP"
                        },
                        new
                        {
                            id = 20,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9782),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9781),
                            UfNome = "Paraná",
                            UfSigla = "PR"
                        },
                        new
                        {
                            id = 21,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9784),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9783),
                            UfNome = "Santa Catarina",
                            UfSigla = "SC"
                        },
                        new
                        {
                            id = 22,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9786),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9785),
                            UfNome = "Rio Grande do Sul",
                            UfSigla = "RS"
                        },
                        new
                        {
                            id = 23,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9789),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9788),
                            UfNome = "Mato Grosso do Sul",
                            UfSigla = "MS"
                        },
                        new
                        {
                            id = 24,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9791),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9790),
                            UfNome = "Mato Grosso",
                            UfSigla = "MT"
                        },
                        new
                        {
                            id = 25,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9793),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9792),
                            UfNome = "Goiás",
                            UfSigla = "GO"
                        },
                        new
                        {
                            id = 26,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9797),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9795),
                            UfNome = "Distrito Federal",
                            UfSigla = "DF"
                        },
                        new
                        {
                            id = 27,
                            DataAtualizacao = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9799),
                            DataCadastro = new DateTime(2020, 4, 7, 21, 17, 7, 567, DateTimeKind.Local).AddTicks(9798),
                            UfNome = "Rondônia",
                            UfSigla = "RO"
                        });
                });

            modelBuilder.Entity("CadastrodeAtms.Models.AtmModel", b =>
                {
                    b.HasOne("CadastrodeAtms.Models.MunicipioModel", "Cidade")
                        .WithMany("atms")
                        .HasForeignKey("AtmCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CadastrodeAtms.Models.UfModel", "Uf")
                        .WithMany()
                        .HasForeignKey("Ufid");
                });

            modelBuilder.Entity("CadastrodeAtms.Models.MunicipioModel", b =>
                {
                    b.HasOne("CadastrodeAtms.Models.UfModel", "uf")
                        .WithMany("municipios")
                        .HasForeignKey("MunUf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
